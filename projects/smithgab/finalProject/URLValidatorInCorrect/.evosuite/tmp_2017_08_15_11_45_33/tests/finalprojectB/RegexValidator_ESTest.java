/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 15 18:50:56 GMT 2017
 */

package finalprojectB;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import finalprojectB.RegexValidator;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RegexValidator_ESTest extends RegexValidator_ESTest_scaffolding {

  @Test
  public void test00()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("fohI", false);
  }

  @Test
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = ">Q";
      stringArray0[1] = "Xea'.K4";
      stringArray0[2] = "Month";
      stringArray0[3] = "1'|r:D";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, false);
      String[] stringArray1 = regexValidator0.match("Xea'.K4");
      assertNotSame(stringArray1, stringArray0);
  }

  @Test
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "(?wz#OqqJ";
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0, true);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 10\r
         // (?wz#OqqJ\r
         //           ^
         //
         assertThrownBy("java.util.regex.Pattern", e);
      }
  }

  @Test
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "&6G#9\"C(";
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 8\r
         // &6G#9\"C(\r
         //         ^
         //
         assertThrownBy("java.util.regex.Pattern", e);
      }
  }

  @Test
  public void test04()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("fohI");
      String[] stringArray0 = regexValidator0.match("fohI");
      RegexValidator regexValidator1 = null;
      try {
        regexValidator1 = new RegexValidator(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expressions are missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test
  public void test05()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("Regular expression[", false);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 18\r
         // Regular expression[\r
         //                   ^
         //
         assertThrownBy("java.util.regex.Pattern", e);
      }
  }

  @Test
  public void test06()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("^.x [OHaxgR|4+?)N");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed character class near index 16\r
         // ^.x [OHaxgR|4+?)N\r
         //                 ^
         //
         assertThrownBy("java.util.regex.Pattern", e);
      }
  }

  @Test
  public void test08()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test
  public void test10()  throws Throwable  {
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator((String[]) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expressions are missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "%Y-%M-%DT%h:%m:%s%z";
      stringArray0[1] = ",";
      stringArray0[2] = "%Y-%M-%DT%h:%m:%s%z";
      stringArray0[3] = "%Y-%M-%DT%h:%m:%s%z";
      stringArray0[4] = "%Y-%M-%DT%h:%m:%s%z";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, true);
      String string0 = regexValidator0.validate(",");
      assertEquals("", string0);
  }

  @Test
  public void test12()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "%Y-%M-%DT%h:%m:%s%z";
      stringArray0[1] = ",";
      stringArray0[2] = "%Y-%M-%DT%h:%m:%s%z";
      stringArray0[3] = "%Y-%M-%DT%h:%m:%s%z";
      stringArray0[4] = "%Y-%M-%DT%h:%m:%s%z";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, true);
      String string0 = regexValidator0.validate((String) null);
      assertNull(string0);
  }

  @Test
  public void test13()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("Timezone");
      String string0 = regexValidator0.validate("InvalidFractional");
      assertNull(string0);
  }

  @Test
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = ">Q";
      stringArray0[1] = "Xea'.K4";
      stringArray0[2] = "Month";
      stringArray0[3] = "1'|r:D";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, false);
      String string0 = regexValidator0.toString();
      assertEquals("RegexValidator{>Q,Xea'.K4,Month,1'|r:D}", string0);
  }

  @Test
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = ">Q";
      stringArray0[1] = "Xea'.K4";
      stringArray0[2] = "Month";
      stringArray0[3] = "1'|r:D";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, false);
      String[] stringArray1 = regexValidator0.match("1'|r:D");
      assertNull(stringArray1);
  }

  @Test
  public void test16()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("Timezone");
      String[] stringArray0 = regexValidator0.match((String) null);
      assertNull(stringArray0);
  }

  @Test
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = ">Q";
      stringArray0[1] = "Xea'.K4";
      stringArray0[2] = "Month";
      stringArray0[3] = "1'|r:D";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, false);
      boolean boolean0 = regexValidator0.isValid("] is missing");
      assertFalse(boolean0);
  }

  @Test
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = ">Q";
      stringArray0[1] = "Xea'.K4";
      stringArray0[2] = "Month";
      stringArray0[3] = "1'|r:D";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0, false);
      boolean boolean0 = regexValidator0.isValid("Month");
      assertTrue(boolean0);
  }

  @Test
  public void test19()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("Timezone");
      boolean boolean0 = regexValidator0.isValid((String) null);
      assertFalse(boolean0);
  }

  @Test
  public void test20()  throws Throwable  {
      String[] stringArray0 = new String[2];
      RegexValidator regexValidator0 = null;
      try {
        regexValidator0 = new RegexValidator(stringArray0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expression[0] is missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }

  @Test
  public void test21()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "InvalidFractional";
      RegexValidator regexValidator0 = new RegexValidator(stringArray0);
  }

  @Test
  public void test22()  throws Throwable  {
      RegexValidator regexValidator0 = new RegexValidator("fohI");
      String[] stringArray0 = regexValidator0.match("fohI");
      RegexValidator regexValidator1 = null;
      try {
        regexValidator1 = new RegexValidator(stringArray0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Regular expressions are missing
         //
         assertThrownBy("finalprojectB.RegexValidator", e);
      }
  }
}
